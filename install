#!/usr/bin/env bash

set -e

function exit_with_message() {
  echo $1
  exit 1
}

# First, retrieve the zip file from Github.
# It will use wget or curl (whichever is defined.)
curl_available=$(command -v curl)
wget_available=$(command -v wget)
unzip_available=$(command -v unzip)

dotfiles_zip=/tmp/dotfiles-master.zip
dotfiles_dir=/tmp/dotfiles-master
dotfiles_url=https://github.com/fnando/dotfiles/archive/master.zip
user_file_backup="/tmp/user_${RANDOM}.sh"

# Detect codename
if [[ "$(uname)" == "Darwin" ]]; then
  codename=osx
else
  codename=$(lsb_release --short --codename)
fi

if [[ "$unzip_available" = "" ]]; then
  exit_with_message "#=> Make sure you have the unzip command available"
fi

echo "#=> Downloading $dotfiles_url to $dotfiles_zip"

if [[ "$curl_available" != "" ]]; then
  curl -Ls -o $dotfiles_zip $dotfiles_url
elif [[ "$wget_available" != "" ]]; then
  wget -q -O $dotfiles_zip $dotfiles_url
else
  exit_with_message "#=> Please make sure curl or wget is installed"
fi

[ -f "$dotfiles_zip" ] || exit_with_message "#=> ERROR: Couldn't download ${dotfiles_url}."

# Now, unzip the directory and
rm -rf $dotfiles_dir
unzip -q $dotfiles_zip -d /tmp

for shell_name in zsh bash; do
  which $shell_name &> /dev/null || continue

  echo "#=> Installing settings for $shell_name"

  user_file=$HOME/.${shell_name}/user.sh

  # Make a backup copy of an existing .${shell_name}/user.sh
  if [[ -f "${HOME}/.${shell_name}/user.sh" ]]; then
    echo "#=> Backing up ${HOME}/.${shell_name}/user.sh"
    cp "${HOME}/.${shell_name}/user.sh" $user_file_backup
  fi

  # Copy files
  find ${dotfiles_dir}/files/home -maxdepth 1 -mindepth 1 -exec cp -R "{}" $HOME/ \;
  cp -R ${dotfiles_dir}/files/.${shell_name} $HOME/
  find ${dotfiles_dir}/files/common -maxdepth 1 -mindepth 1 -exec cp -R "{}" $HOME/.${shell_name} \;

  # Restore .${shell_name}/user.sh backup copy
  if [[ -f $user_file_backup ]]; then
    cp $user_file_backup $user_file
    echo "#=> Setting $user_file permission to 0600"
    chmod 0600 $user_file
    echo "#=> Restoring ${HOME}/.${shell_name}/user.sh"
  fi
done

# Set up local directory
mkdir -p $HOME/local
[ -x '/usr/bin/chflags' ] && chflags hidden $HOME/local

# Copy binaries to ~/local/bin
echo "#=> Copying binaries"
cp -R $dotfiles_dir/files/bin $HOME/local
find $HOME/local/bin -type f -exec chmod +x {} \;

# Clone vundle.
if [[ ! -d "$HOME/.vim/bundle/vundle" ]]; then
  echo "#=> Cloning vim's vundle plugin"
  git clone https://github.com/gmarik/vundle.git $HOME/.vim/bundle/vundle &> /dev/null
fi

# Set up SSH.
chmod 700 ~/.ssh
chmod 600 ~/.ssh/config
mkdir -p ~/.ssh/controlmaster
chmod 700 ~/.ssh/controlmaster

echo '#=> Done! Restart your terminal!'
